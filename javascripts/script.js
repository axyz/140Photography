// Generated by CoffeeScript 1.4.0
var AppViewModel, Section, loadTweets;

loadTweets = function(title, div, users, list, n) {
  $("#deck").html("<h2>" + title + "</h2>");
  $("#deck").append("<div id=\"tweetFeed\"></div>");
  $(div).html("");
  return $(div).jTweetsAnywhere({
    username: users,
    list: list,
    count: n,
    showTweetFeed: {
      showProfileImages: true,
      showUserScreenNames: true,
      showUserFullNames: true,
      showActionReply: true,
      showActionRetweet: true,
      showActionFavorite: true,
      autorefresh: {
        mode: "trigger-insert",
        interval: 300
      },
      paging: {
        mode: "more"
      },
      showTimestamp: {
        refreshInterval: 60
      }
    }
  });
};

Section = function(data) {
  this.title = ko.observable(data.title);
  this.user = ko.observable(data.user);
  this.list = ko.observable(data.list);
};

AppViewModel = function() {
  var self;
  self = this;
  this.sections = ko.observableArray([]);
  this.activeSection = ko.observable();
  this.loadTweets = function() {
    return loadTweets(self.activeSection().title(), "#tweetFeed", self.activeSection().user(), self.activeSection().list(), 15);
  };
  $.getJSON("data/section.json", function(data) {
    var el, _fn, _i, _len;
    _fn = function(el) {
      self.sections.push(new Section(el));
    };
    for (_i = 0, _len = data.length; _i < _len; _i++) {
      el = data[_i];
      _fn(el);
    }
    self.activeSection(self.sections()[0]);
  });
  this.loadList = function(list) {
    location.hash = "list/" + this.list();
  };
  Sammy(function() {
    this.get("#list/:section", function() {
      var id, me;
      me = this;
      id = ko.utils.arrayFirst(self.sections(), function(el) {
        return el.list() === me.params.section;
      });
      self.activeSection(id);
      return self.loadTweets();
    });
    return this.get("", function() {
      return this.app.runRoute("get", "#list/news");
    });
  }).run();
};

ko.applyBindings(new AppViewModel());
